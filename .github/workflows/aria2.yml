name: Aria2 CI

permissions:
  contents: write
  actions: read

on:
  workflow_dispatch:
  schedule:
    - cron: "0 17 * * *"
  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Check out source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch latest release
        id: release
        run: |
          URL=$(curl -s "https://api.github.com/repos/aria2/aria2/releases/latest" \
            | grep "browser_download_url" \
            | grep ".tar.gz" \
            | cut -d '"' -f4)
          TAG=$(curl -s "https://api.github.com/repos/aria2/aria2/releases/latest" \
            | grep '"tag_name":' \
            | head -n1 \
            | cut -d '"' -f4)

          echo "release_url=$URL"  >> $GITHUB_OUTPUT
          echo "release_tag=$TAG" >> $GITHUB_OUTPUT

      - name: Check if release/tag exists
        id: exists
        env:
          TAG: ${{ steps.release.outputs.release_tag }}
        run: |
          if git rev-parse --verify --quiet "refs/tags/$TAG" >/dev/null; then
            echo "exists=true"  >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Ccache for gh actions
        uses: hendrikmuhs/ccache-action@v1.2.18
        with:
          max-size: 2G
          verbose: 1
          variant: ccache
          create-symlink: true

      - name: Build binary
        if: steps.exists.outputs.exists == 'false'
        run: |
          chmod a+x build.sh
          bash ./build.sh

      - name: Compress binary
        if: steps.exists.outputs.exists == 'false'
        env:
          TAG: ${{ steps.release.outputs.release_tag }}
        run: |
          mkdir compressed && cp ./aria2c compressed && cd compressed
          
          tar -cvf - aria2c | gzip -9 > "aria2c-$TAG.tar.gz"
          tar -cf - aria2c | xz -9 -e -T0 > "aria2c-$TAG.tar.xz"
          zip -r -9 "aria2c-$TAG.zip" aria2c

          rm -rf aria2c

      - name: Upload aria2c binary
        if: steps.exists.outputs.exists == 'false'
        uses: actions/upload-artifact@v4.3.3
        with:
          name: aria2-static
          path: ./compressed

      - name: Create GitHub Release
        if: steps.exists.outputs.exists == 'false'
        uses: softprops/action-gh-release@v2.3.2
        with:
          tag_name: ${{ steps.release.outputs.release_tag }}
          name: Aria2 ${{ steps.release.outputs.release_tag }}
          files: ./compressed/**

      - name: Telegram Notify
        if: steps.exists.outputs.exists == 'false'
        env:
          TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}
          TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}
          TAG_NAME: ${{ steps.release.outputs.release_tag }}
          HOST: ${{ github.server_url }}
          REPO: ${{ github.repository }}
        run: |
          REPO_URL="$HOST/$REPO"
          message=$(echo -e "New aria2 version detected: *${TAG_NAME}*\n\nDownload static binary (linux-x86):\n[Download zip](${REPO_URL}/releases/download/${TAG_NAME}/aria2c-${TAG_NAME}.zip)\n[Download tar.gz](${REPO_URL}/releases/download/${TAG_NAME}/aria2c-${TAG_NAME}.tar.gz)\n[Download tar.xz](${REPO_URL}/releases/download/${TAG_NAME}/aria2c-${TAG_NAME}.tar.xz)")
  
          curl -s -X POST "https://api.telegram.org/bot$TG_BOT_TOKEN/sendMessage" \
            -d "chat_id=$TG_CHAT_ID" \
            -d "disable_web_page_preview=true" \
            -d "parse_mode=markdown" \
            -d "text=$message"
